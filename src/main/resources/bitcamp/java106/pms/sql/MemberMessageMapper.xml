<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="bitcamp.java106.pms.dao.MemberMessageDao">

  <resultMap type="bitcamp.java106.pms.domain.MemberMessage" id="MemberMessageMap">
    <id column="msgno" property="no"/>
    <result column="cont" property="content"/>
    <result column="date" property="createdDate"/>
    
    <association property = "sender" javaType="bitcamp.java106.pms.domain.Member">
      <id column="s_memno" property="no"/>
      <result column="s_name" property="name"/>     
      <result column="s_email" property="email"/> 
    </association>
    
    <association property ="receiver" javaType="bitcamp.java106.pms.domain.Member">
      <id column="r_memno" property="no"/>
      <result column="r_name" property="name"/>      
      <result column="r_email" property="email"/>
    </association>    
    <!-- 
    association의 컬럼값은 실제 테이블의 속성값이 아니어도 된다.
     -->
  </resultMap>

  <select id="selectListSend" resultMap="MemberMessageMap" parameterType="map">
	select mm.msgno, mm.cont, mm.rcvr, mm.date, 
	       sndr.memno as s_memno, sndr.name as s_name, sndr.email as s_email,
	       rcvr.memno as r_memno, rcvr.name as r_name, rcvr.email as r_email
	from member_message mm 
	    inner join member sndr on mm.sndr = sndr.memno 
	    inner join member rcvr on mm.rcvr = rcvr.memno
	where mm.sndr = #{sender.no}
    order by date DESC
    limit #{startRowNo}, #{pageSize}
  </select>

  <select id="selectListReceive" resultMap="MemberMessageMap" parameterType="map">
    select mm.msgno, mm.cont, mm.rcvr, mm.date, 
           sndr.memno as s_memno, sndr.name as s_name, sndr.email as s_email,
           rcvr.memno as r_memno, rcvr.name as r_name, rcvr.email as r_email
    from member_message mm 
           inner join member sndr on mm.sndr = sndr.memno 
           inner join member rcvr on mm.rcvr = rcvr.memno
    where mm.rcvr = #{receiver.no}
    order by date DESC
    limit #{startRowNo}, #{pageSize}
  </select>
    
  <insert id="add" parameterType="map">
    insert into member_message(cont, sndr, rcvr, date)
    values (#{content}, #{sender.no}, #{receiver.no}, now())
  </insert>
      
  <select id="selectOne" parameterType="int" resultMap="MemberMessageMap">
	select mm.msgno, mm.cont, mm.rcvr, mm.date, 
	       sndr.memno as s_memno, sndr.name as s_name, 
	       rcvr.memno as r_memno, rcvr.name as r_name 
	from member_message mm 
	    inner join member sndr on mm.sndr = sndr.memno 
	    inner join member rcvr on mm.rcvr = rcvr.memno
	where mm.msgno = #{no}
  </select>
  <!-- left outer join을 써도 된다 -->
  
   <delete id="delete" parameterType="int">
   
   update member_message SET
   <choose>
   	<when test="type == 'receive'">
   		rcvr = null
   	</when>
   	<otherwise>
   		sndr = null
   	</otherwise>
   </choose>
   where msgno=#{no}
  </delete>

</mapper>
