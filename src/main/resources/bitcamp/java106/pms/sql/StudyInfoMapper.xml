<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace 이름은 SQL문을 찾을 때 사용하는 그룹명이다.
       따라서 SQL 문을 사용하는 DAO 클래스 이름과 같게 하면
       유지보수할 때 알아보기 쉽다. 
       단순히 알아보기 쉬울 뿐만 아니라 
       스프링 프레임워크와 연동할 때 DAO 객체를 자동 생성할 수 있다.
-->
<mapper namespace="bitcamp.java106.pms.dao.StudyInfoDao">
  <resultMap type="StudyInfo" id="StudyMap">
    <id column="stdno" property="no" />
    <result column="city" property="city" />
    <result column="county" property="county" />
    <result column="sname" property="name" />
    <result column="info" property="information" />
    <result column="cdt" property="createdDate" />
    <result column="mprs" property="maxPeople" />
    <result column="ctgr" property="category" />
    <result column="pic" property="picture" />
    <result column="cnt" property="memCount" />
    
     <association property="member" javaType="Member">
      <id column="memno" property="no"/>
      <result column="city" property="city" />
      <result column="county" property="county" />
    </association>
    
    <association property="hashtag" javaType="HashTag">
        <id column="stdno" property="no"></id>
        <result column="tag" property="hashtag"></result>
    </association>
  </resultMap>

  <!-- SQL 문 id를 설정할 때 SQL문을 사용하는 메서드 이름과 같게하면
         유지보수할 때 알아보기 쉽다.   
         알아보기 쉬울 뿐만 아니라
         스프링 프레임워크와 연동할 때 DAO객체를 자동생성하고
         그 메서드를 자동생성할 때 사용할 수 있다.
  -->  
  <insert id="insert" parameterType="StudyInfo" 
        useGeneratedKeys="true" keyColumn="stdno" keyProperty="no"> <!-- 자동증가된 PK값을 Board 객체에 담아준다. -->
    insert into study_info(city,county,sname,info,cdt,mprs,ctgr) 
    values(#{city},#{county},#{name},#{information},now(),#{maxPeople},#{category})
  </insert>
  
  <select id="selectlimitOne" resultMap="StudyMap">
  select * from study_info order by stdno desc limit 1
  </select>
  
  <select id="selectList" 
          resultMap="StudyMap" parameterType="map"> 
    select stdno, city, county, sname, info, cdt, mprs, ctgr, pic, (select count(*) from study_joined_member jm where jm.stdno = si.stdno) as cnt
    from study_info si order by stdno desc limit #{startRowNo}, #{pageSize}
    <!-- study_info.stdno,name,county -->
  </select>
  
  <select id="studyCount" resultType="int">
    select count(*) 
    from study_info
  </select>
  
 
  
  <select id="selectSearchList" 
          resultMap="StudyMap" parameterType="map"> 
    select * 
    from study_info join hashtag on study_info.stdno=hashtag.stdno
    where city=#{city} and county=#{county} and ctgr=#{category} and tag LIKE CONCAT('%',#{hashtag},'%')
  </select>

  <select id="selectOne" resultMap="StudyMap" parameterType="int">
	  select * 
	  from study_info 
	  where stdno = #{value}
  </select>
  
  <delete id="delete" parameterType="int">
    delete from study_info where stdno=#{value}
  </delete>
  
    <update id="update" parameterType="StudyInfo">
    update study_info 
           SET sname = #{name}, city = #{city}, county = #{county}, 
               info = #{information}, ctgr = #{category}
    where stdno = #{no}
  </update>
  
  <update id="photo" parameterType="map">
  update study_info
  SET pic = #{fileName}
  where stdno = #{stdno}
  </update>
  
   <select id="selectListRandom" 
          resultMap="StudyMap" parameterType="map"> 
select * 
    from study_info 
    where stdno=1
    or stdno=3
    or stdno=103
    or stdno=142
    or stdno=15
    or stdno=47
    or stdno=87
    or stdno=76
    or stdno=104
    or stdno=33
    or stdno=73
    or stdno=108
    or stdno=6
    ORDER BY RAND() limit 1, 4   
  </select>
  
  <select id="nearList" resultMap="StudyMap" parameterType="int">
        SELECT m.memno, m.city, m.county, si.stdno, si.sname, si.pic, si.ctgr, h.tag
        FROM member m 
        LEFT JOIN study_info si ON m.city=si.city
        LEFT JOIN hashtag h ON si.stdno=h.stdno
        WHERE m.memno=#{no}
        AND m.county=si.county
        ORDER BY rand()
        limit 1, 4;    
</select>

</mapper>